#include <WiFi.h>
#include <HTTPClient.h>

// Konfigurasi WiFi
const char* ssid = "Tp-link";       // Ganti dengan nama SSID WiFi kamu
const char* password = "Kallang123"; // Ganti dengan password WiFi kamu

// URL API yang sudah kamu buat di server cPanel
const String serverUrl = "https://22tkja.com/iot_data/post_data.php"; // Ganti dengan URL API kamu

// Pin Sensor
#define RAIN_SENSOR_DO_PIN 25  // Sensor Hujan
#define WATER_FLOW_SENSOR_PIN 26 // Sensor Aliran Air

// Pin Sensor Ultrasonik
#define TRIG_PIN 27     // Pin Trigger untuk sensor ultrasonik
#define ECHO_PIN 14     // Pin Echo untuk sensor ultrasonik

// Variabel untuk Sensor Aliran Air
volatile int pulseCount = 0;    // Hitungan pulsa dari sensor
float flowRate = 0.0;           // Kecepatan aliran air (liter per menit)
float flowSpeed = 0.0;          // Kecepatan aliran air (m/min)
unsigned long previousMillis = 0;

// Variabel untuk Sensor Ultrasonik
long duration, distance; // Durasi dan jarak yang diukur oleh sensor ultrasonik

// Konstanta
const float calibrationFactor = 4.5; // Sesuaikan dengan spesifikasi sensor (liter per menit per pulsa)
const float pipeDiameter = 0.05;    // Diameter pipa dalam meter (misalnya 5 cm)
const float litersToCubicMeters = 0.001;

void IRAM_ATTR pulseCounter() {
  pulseCount++; // Interrupt akan menambah hitungan pulsa
}

void setup() {
  // Inisialisasi Serial Monitor
  Serial.begin(115200);

  // Inisialisasi WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Menyambung ke WiFi...");
  }
  Serial.println("Terhubung ke WiFi!");

  // Inisialisasi Pin Sensor Hujan
  pinMode(RAIN_SENSOR_DO_PIN, INPUT);

  // Inisialisasi Pin Sensor Aliran Air
  pinMode(WATER_FLOW_SENSOR_PIN, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(WATER_FLOW_SENSOR_PIN), pulseCounter, RISING);

  // Inisialisasi Pin Sensor Ultrasonik
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);

  Serial.println("Monitoring Dimulai...");
}

void loop() {
  // Sensor Hujan
  int rainDigitalValue = digitalRead(RAIN_SENSOR_DO_PIN);
  String rainStatus = (rainDigitalValue == LOW) ? "Hujan Terdeteksi" : "Tidak Ada Hujan";
  Serial.print("Sensor Hujan: ");
  Serial.println(rainStatus);

  // Sensor Aliran Air
  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis > 1000) { // Hitung setiap 1 detik
    previousMillis = currentMillis;

    // Hitung laju aliran air dalam liter per menit
    flowRate = (pulseCount / calibrationFactor);

    // Mengubah liter per menit menjadi meter per menit berdasarkan volume
    flowSpeed = (flowRate * litersToCubicMeters) / (3.14159 * (pipeDiameter / 2) * (pipeDiameter / 2)); // m/min

    pulseCount = 0; // Reset hitungan pulsa

    Serial.print("Kecepatan Aliran Air: ");
    Serial.print(flowSpeed);
    Serial.println(" m/min");
  }

  // Pengukuran jarak menggunakan sensor Ultrasonik
 digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);

  duration = pulseIn(ECHO_PIN, HIGH);
  distance = duration * 0.0344 / 2;  // Menghitung jarak dalam cm (kecepatan suara 0.0344 cm/Î¼s)

  // Logika untuk menghitung ketinggian air langsung pada variabel distance
  distance = 8 - distance; // 8 cm adalah jarak sensor ke dasar
  if (distance < 0) distance = 0; // Jika jarak lebih dari 8 cm, tidak ada air.

  Serial.print("Ketinggian Air (distance): ");
  Serial.print(distance);
  Serial.println(" cm");

  // Kirim data ke server jika data sudah tersedia
  sendDataToServer(rainStatus, flowSpeed, distance);

  delay(1000); // Delay untuk stabilitas pembacaan
}

void sendDataToServer(String rainStatus, float flowSpeed, long distance) {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    http.begin(serverUrl); // URL API di server

    // Set header untuk request POST
    http.addHeader("Content-Type", "application/x-www-form-urlencoded");

    // Membuat payload data
    String payload = "rainStatus=" + rainStatus + "&flowSpeed=" + String(flowSpeed) + "&distance=" + String(distance);

    // Mengirim data ke server
    int httpCode = http.POST(payload);

    if (httpCode > 0) {
      Serial.print("HTTP Response Code: ");
      Serial.println(httpCode);
    } else {
      Serial.println("Gagal mengirim data");
    }

    http.end(); // Menutup koneksi HTTP
  } else {
    Serial.println("Tidak ada koneksi WiFi");
  }
}
